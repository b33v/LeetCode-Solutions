class Solution:
    def getPermutation(self, n: int, k: int) -> str:
        # create a list to store the available numbers to be used in the permutation
        nums = [str(i) for i in range(1, n+1)]
        
        # create a list to store the factorial of each number from 1 to n-1
        factorials = [1]
        for i in range(1, n):
            factorials.append(factorials[-1] * i)
        
        # decrement k to match the 0-based indexing
        k -= 1
        
        # create a string to store the permutation
        permutation = ""
        
        # iterate through each digit in the permutation
        for i in range(n-1, -1, -1):
            # calculate the index of the digit to be used in the permutation
            index = k // factorials[i]
            # add the digit to the permutation
            permutation += nums[index]
            # remove the digit from the available numbers
            nums.pop(index)
            # update k to find the next digit in the permutation
            k %= factorials[i]
        
        # return the permutation
        return permutation
