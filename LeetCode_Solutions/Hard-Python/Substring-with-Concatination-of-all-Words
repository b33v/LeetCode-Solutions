class Solution:
    def findSubstring(self, s: str, words: List[str]) -> List[int]:
        if not words:
            return []
        
        n, m, k = len(s), len(words), len(words[0])
        freq = {}
        for word in words:
            freq[word] = freq.get(word, 0) + 1
        
        res = []
        for i in range(k):
            left, count = i, 0
            cur_freq = {}
            for j in range(i, n - k + 1, k):
                word = s[j:j+k]
                if word in freq:
                    cur_freq[word] = cur_freq.get(word, 0) + 1
                    count += 1
                    while cur_freq[word] > freq[word]:
                        cur_freq[s[left:left+k]] -= 1
                        count -= 1
                        left += k
                    if count == m:
                        res.append(left)
                        cur_freq[s[left:left+k]] -= 1
                        count -= 1
                        left += k
                else:
                    cur_freq = {}
                    count = 0
                    left = j + k
        return res
